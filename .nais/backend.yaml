apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: "{{backend.name}}"
  namespace: "{{team}}"
  labels:
    team: "{{team}}"
spec:
  accessPolicy:
    inbound:
      rules:
        # mostly relevant if you want to use React Server Functions to directly access the backend through service discovery
        - application: "{{web.name}}"
          namespace: "{{team}}"
  ingresses:
    - "{{backend.ingress}}"
  image: "{{image}}"
  port: 8080
  env:
    - name: Infrastructure__ConnectionString
      value: Host=$(DB_HOST);Port=$(DB_PORT);Database=$(DB_DATABASE);Username=$(DB_USERNAME);Password=$(DB_PASSWORD);SSL Mode=VerifyCA;SSL Certificate=$(DB_SSLCERT);SSL Key=$(DB_SSLKEY);Root Certificate=$(DB_SSLROOTCERT)
    - name: Domain__SomeSetting
      value: foo
    - name: API__Cors__AllowedOrigins__0
      value: "{{web.ingresses.[0]}}"
  replicas:
    max: 1
    min: 1
  resources:
    requests:
      cpu: 10m
      memory: 256Mi
  readiness:
    failureThreshold: 10
    initialDelay: 20
    path: /healthz
    periodSeconds: 5
    port: 8080
    timeout: 1
  observability:
    autoInstrumentation:
      enabled: true
      runtime: sdk
  gcp:
    sqlInstances:
      - type: POSTGRES_17
        tier: db-f1-micro
        databases:
          - envVarPrefix: DB
            name: demo
